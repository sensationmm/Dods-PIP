openapi: 3.0.0
info:
  description: DODS Boilerplate
  version: 1.0.0
  title: DODS Boilerplate
  contact:
    email: kenanhancer@gmail.com
  license:
    name: GPL 3.0
    url: "https://www.gnu.org/licenses/gpl-3.0.html"
servers:
  - url: /api

paths:
  /health:
    get:
      operationId: health
      summary: "Get Health Message"
      description: "Get Health Message"
      responses:
        "200":
          description: OK
        "404":
          $ref: "#/components/responses/NotFound"

  /collections:
    post:
      operationId: createCollection
      summary: "Creates a collection associated to a Client Account"
      description: "Create Collection Endpoint"
      # security:
      #   - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/CreateCollection"
      responses:
        "200":
          $ref: "#/components/responses/CollectionResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

# security:
#   - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    CreateCollectionInput:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        clientAccountId:
          type: string
          format: uuid
        createdById:
          type: string
          format: uuid

    CollectionOutput:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        isActive:
          type: boolean
        clientAccount:
          $ref: "#/components/schemas/ClientAccount"
        createdBy:
          $ref: "#/components/schemas/User"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ClientAccount:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string

    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string

    Message:
      type: object
      properties:
        message:
          type: string

    Errors:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

  parameters:
    collectionId:
      in: path
      name: collectionId
      schema:
        type: string
        format: uuid
      required: true

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
    BadRequest:
      description: Bad Request. Input must be valid
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Message"
              - $ref: "#/components/schemas/Errors"
    NotAcceptable:
      description: Not Acceptable.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
    CollectionResponse:
      description: "Response with single collection"
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              collection:
                $ref: "#/components/schemas/CollectionOutput"

  requestBodies:
    CreateCollection:
      description: "Payload to create a new collection"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateCollectionInput"
            required:
             - name
             - clientAccountId
             - createdById
