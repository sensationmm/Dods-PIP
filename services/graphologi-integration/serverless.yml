service: graphologi-integration

frameworkVersion: '2'

projectDir: ../

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.7
  region: eu-west-1
  timeout: 60
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: pip-${self:provider.stage}-services-lambdas

  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    S3_TAXONOMY_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-taxonomies
    ES_CLOUD_ID: ${env:ES_CLOUD_ID}
    ES_KEY_ID: ${env:ES_KEY_ID}
    ES_API_KEY: ${env:ES_API_KEY}
    GRAPHIFY_USERNAME: ${env:GRAPHIFY_USERNAME}
    GRAPHIFY_PASSWORD: ${env:GRAPHIFY_PASSWORD}
    TAXONOMY_IMPORT_SQS: { Ref: graphologiImportQueue }
    TAXONOMY_TREE_BUCKET: pip-${self:provider.stage}-taxonomy-data
    JWK_URL: 'https://cognito-idp.${self:provider.region}.amazonaws.com/${cf:dods-iam-${self:provider.stage}.UserPoolId}/.well-known/jwks.json'
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - sqs:SendMessage
      Resource:
        - 'arn:aws:s3:::${self:provider.environment.S3_TAXONOMY_BUCKET}/*'
        - "*"

resources:
  Resources:
    graphologiImportQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "graphologiImportQueue"
        VisibilityTimeout: 200

package:
  include:
    - node_modules/**

functions:
  taxonomy:
    handler: taxonomyImport.handle
    runtime: python3.7
    timeout: 180
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - graphologiImportQueue
              - Arn
    layers:
      - ${cf:pandas-layer-${self:provider.stage}.PandasLayerExport}

  taxonomyTrigger:
    handler: taxonomyImportTrigger.handle
    runtime: python3.7
    events:
      - http:
          path: /taxonomy
          method: put