service: graphologi-integration

frameworkVersion: '2'

projectDir: ../

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: true
    useDownloadCache: false

provider:
  name: aws
  runtime: python3.7
  region: eu-west-1
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: pip-${self:provider.stage}-services-lambdas

  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    S3_TAXONOMY_BUCKET: ${self:service}-${opt:stage, self:provider.stage}-taxonomies
    ES_CLOUD_ID: ${env:ES_CLOUD_ID}
    ES_KEY_ID: ${env:ES_KEY_ID}
    ES_API_KEY: ${env:ES_API_KEY}
    GRAPHIFY_USERNAME: ${env:GRAPHIFY_USERNAME}
    GRAPHIFY_PASSWORD: ${env:GRAPHIFY_PASSWORD}
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource:
        - 'arn:aws:s3:::${self:provider.environment.S3_TAXONOMY_BUCKET}/*'

resources:
  Resources:
    LoggingBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:service}-${opt:stage, self:provider.stage}-logging
        AccessControl: LogDeliveryWrite

    S3TaxonomyBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:provider.environment.S3_TAXONOMY_BUCKET}
        LoggingConfiguration:
          DestinationBucketName: ${self:service}-${opt:stage, self:provider.stage}-logging
          LogFilePrefix: graphologi-bucket-logs
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "Authorization"
              AllowedMethods:
                - GET
              AllowedOrigins:
                - "*"
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - PUT
              AllowedOrigins:
                - "*"

package:
  include:
    - node_modules/**

functions:
  taxonomy:
    handler: taxonomyImport.handle
    runtime: python3.7
    timeout: 30
    events:
      - http:
          path: /taxonomy
          method: put
    layers:
      - { Ref: PandasLambdaLayer }

layers:
  pandas:
    path: layer
    compatibleRuntimes:
      - python3.7
