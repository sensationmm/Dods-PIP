openapi: 3.0.0
info:
    description: Dods Editorial Workflow API
    version: '1.0.0'
    title: Editorial Workflow Service API
paths:
    /editorial-record:
        post:
            operationId: createEditorialRecord
            summary: Create new Editorial Record
            requestBody:
                $ref: '#/components/requestBodies/CreateEditorialRecord'
            responses:
                '200':
                    $ref: '#/components/responses/EditorialRecordResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
        get:
            summary: List Editorial Records found by search parameters
            parameters:
                - in: query
                  name: searchTerm
                  description: Search records with coincidences on name
                  schema:
                      type: string
                  required: false
                - in: query
                  name: contentSource
                  description: Filter records using content source
                  schema:
                      type: string
                  required: false
                - in: query
                  name: informationType
                  description: Filter records using information type
                  schema:
                      type: string
                  required: false
                - in: query
                  name: status
                  description: Filter records using status
                  schema:
                      type: string
                      format: uuid
                      example: d290f1ss-6c54-4b01-98e6-d701748f7151
                  required: false
                - in: query
                  name: offset
                  description: Pagination parameter
                  schema:
                      type: integer
                  required: false
                - in: query
                  name: limit
                  description: Pagination parameter
                  schema:
                      type: integer
                  required: false
                - in: query
                  name: startDate
                  description: Filter records starting from a specific date
                  schema:
                      type: string
                      format: date
                  required: false
                - in: query
                  name: endDate
                  description: Filter records until a specific date
                  schema:
                      type: string
                      format: date
                  required: false
            responses:
                '200':
                    $ref: '#/components/responses/EditorialRecordListResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
    /editorial-record/{recordId}:
        put:
            summary: Update Editorial Record
            parameters:
                -   
                    name: recordId
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
                        example: d290f1ss-6c54-4b01-98e6-d701748f7151
            requestBody:
                $ref: '#/components/requestBodies/UpdateEditorialRecord'
            responses:
                '200':
                    $ref: '#/components/responses/EditorialRecordResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
        get:
            summary: Get Editorial Record by UUID
            parameters:
                -   
                    name: recordId
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
                        example: d290f1ss-6c54-4b01-98e6-d701748f7151
            responses:
                '200':
                    $ref: '#/components/responses/EditorialRecordResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
    /editorial-record/{recordId}/lock:
        put:
            summary: Update Editorial Record
            parameters:
                -   
                    name: recordId
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
                        example: d290f1ss-6c54-4b01-98e6-d701748f7151
            requestBody:
                $ref: '#/components/requestBodies/LockEditorialRecord'
            responses:
                '200':
                    $ref: '#/components/responses/EditorialRecordResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
    /content-sources:
        get:
            summary: List content sources based upon data in Editorial Records table
            responses:
                '200':
                    $ref: '#/components/responses/ContentSourcesListResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
    /information-types:
        get:
            summary: List information types based upon data in Editorial Records table
            responses:
                '200':
                    $ref: '#/components/responses/InformationTypesListResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
    /editorial-record-status:
        get:
            summary: List of status based upon data in Editorial Records Statuses table
            responses:
                '200':
                    $ref: '#/components/responses/EditorialRecordStatusListResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'
    /editorial-record/{recordId}/publish:
        post:
            summary: Publish Editorial Record
            parameters:
                -   
                    name: recordId
                    in: path
                    required: true
                    schema:
                        type: string
                        format: uuid
                        example: d290f1ss-6c54-4b01-98e6-d701748f7151
            requestBody:
                $ref: '#/components/requestBodies/LockEditorialRecord'
            responses:
                '200':
                    $ref: '#/components/responses/EditorialRecordResponse'
                '400':
                    $ref: '#/components/responses/BadRequest'
                '401':
                    $ref: '#/components/responses/Unauthenticated'
                '403':
                    $ref: '#/components/responses/Unauthorized'

components:
    responses:
        ContentSourcesListResponse:
            description: Content sources in editorial records
            content: 
                application/json:
                    schema:
                        type: 'object'
                        required:
                            - success
                            - contentSources
                        properties:
                            success:
                                type: boolean
                                example: true
                            contentSources:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ContentSourcesListResponse'
        InformationTypesListResponse:
            description: Information types in editorial records
            content: 
                application/json:
                    schema:
                        type: 'object'
                        required:
                            - success
                            - informationTypes
                        properties:
                            success:
                                type: boolean
                                example: true
                            informationTypes:
                                type: array
                                items:
                                    $ref: '#/components/schemas/InformationTypesListResponse'
        EditorialRecordResponse:
            description: Response with single Editorial Record
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/EditorialRecordResponse'

        EditorialRecordListResponse:
            description: Editorial Records found with search parameters
            content:
                application/json:
                    schema:
                        type: 'object'
                        required:
                            - totalRecords
                            - filteredRecords
                            - results
                        properties:
                            totalRecords:
                                type: integer
                                example: 1
                            filteredRecords:
                                type: integer
                                example: 1
                            results:
                                type: array
                                items:
                                    $ref: '#/components/schemas/EditorialRecordResponse'
        EditorialRecordStatusListResponse:
            description: Editorial Records status in editorial records table
            content:
                application/json:
                    schema:
                        type: 'object'
                        required:
                            - success
                            - statuses
                        properties:
                            success:
                                type: boolean
                                example: true
                            status:
                                type: array
                                items:
                                    $ref: '#/components/schemas/EditorialRecordStatusResponse'

        BadRequest:
            description: Bad request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        Unauthenticated:
            description: Unauthenticated
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        Unauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        NotFound:
            description: The specified resource was not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'

    requestBodies:
        CreateEditorialRecord:
            description: A JSON object containing Editorial Record information
            required: true
            content:
                application/json:
                    schema:
                        anyOf:
                            - $ref: '#/components/schemas/CreateEditorialRecordRequest'
                            - $ref: '#/components/schemas/CreateEditorialRecordRequestV2'
        UpdateEditorialRecord:
            description: A JSON object containing Editorial Record information
            required: true
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateEditorialRecordRequest'
        LockEditorialRecord:
            description: A JSON object containing Editorial Record information
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        required:
                          - assignedEditorId
                        properties:
                            assignedEditorId:
                                type: string
                                format: uuid
                                example: d290f1ss-6c54-4b01-98e6-d701748f7151

    schemas:
        Error:
            type: object
            properties:
                code:
                    type: string
                    example: '4xx'
                message:
                    type: string
                    example: Error message relevant to error
            required:
                - code
                - message
        
        EditorialRecordBase:
            type: object
            properties:
                documentName:
                    type: string
                    example: Some UK Parliament Oral Question
                s3Location:
                    type: string
                    example: arn:aws:s3:::editorial-workflow-prod/editorial-workflow/01012020/some-question.json
                informationType:
                    type: string
                contentSource:
                    type: string
                scheduledPublishingDate:
                    type: string
                    format: date
                    example: '2020-09-01 09:30:26'     
        
        EditorialRecordStatusBase:
            type: object
            properties:
                uuid:
                    type: string
                    format: uuid
                    example: d290f1ss-6c54-4b01-98e6-d701748f7151
                name:
                    type: string
                    example: In Progress
        
        ContentSourceBase:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                    example: House of Commons

        InformationTypeBase:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                    example: Press Release

        UpdateEditorialRecordRequest:
            allOf:
              - $ref: '#/components/schemas/EditorialRecordBase'
            type: object
            properties:
                assignedEditorId:
                    type: string
                    format: uuid
                    example: d290f1ss-6c54-4b01-98e6-d701748f7151
                statusId:
                    type: string
                    format: uuid
                    example: d290f1ss-6c54-4b01-98e6-d701748f7151

        CreateEditorialRecordRequest:
            allOf:
              - $ref: '#/components/schemas/EditorialRecordBase'
            type: object
            properties:
                assignedEditorId:
                    type: string
                    format: uuid
                    example: d290f1ss-6c54-4b01-98e6-d701748f7151
                statusId:
                    type: string
                    format: uuid
                    example: d290f1ss-6c54-4b01-98e6-d701748f7151
            required:
                - documentName
                - s3Location

        EditorialRecordResponse:
            allOf:
              - $ref: '#/components/schemas/EditorialRecordBase'
            type: object
            required:
              - uuid
            properties:
                uuid: 
                    type: string
                    format: uuid
                    example: d290f1ss-6c54-4b01-98e6-d701748f7151
                assignedEditor:
                    type: object
                    properties:
                        uuid:
                            type: string
                            format: uuid
                            example: d290f1ss-6c54-4b01-98e6-d701748f7151
                        fullName:
                            type: string
                            example: John Doe
                status:
                    type: object
                    properties:
                        uuid:
                            type: string
                            format: uuid
                            example: d290f1ss-6c54-4b01-98e6-d701748f7151
                        name:
                            type: string
                            example: In Progress
                createdAt:
                    type: string
                    format: date
                    example: '2020-09-01 09:30:26'
                updatedAt:
                    type: string
                    format: date
                    example: '2020-09-01 09:30:26'
        
        EditorialRecordStatusResponse:
            allOf:
              - $ref: '#/components/schemas/EditorialRecordStatusBase'
            type: object
            required:
              - uuid
              - name
            properties:
                uuid: 
                    type: string
                    format: uuid
                    example: d290f1ss-6c54-4b01-98e6-d701748f7151
                name:
                    type: string
                    example: In Progress

        ContentSourcesListResponse:
            allOf:
              - $ref: '#/components/schemas/ContentSourceBase'
            type: object
            required:
              - id
              - name
            properties:
                id: 
                    type: string
                name:
                    type: string
                    example: House of Commons
        
        InformationTypesListResponse:
            allOf:
              - $ref: '#/components/schemas/InformationTypeBase'
            type: object
            required:
              - id
              - name
            properties:
                id: 
                    type: string
                name:
                    type: string
                    example: Press Release

        CreateEditorialRecordRequestV2:
          type: object
          additionalProperties: false
          properties:
            contentSource:
              type: string
            document:
              $ref: '#/components/schemas/EditorialDocument'
            documentName:
              type: string
            informationType:
              type: string
          required:
            - documentName
            - contentSource
            - informationType
            - document
        
        EditorialDocument:
          type: object
          additionalProperties: false
          properties:
            contentSource:
              type: string
            createdBy:
              type: string
            createdDateTime:
              format: date-time
              type: string
            documentContent:
              type: string
            documentTitle:
              type: string
            feedFormat:
              type: string
            informationType:
              type: string
            internallyCreated:
              type: boolean
            jurisdiction:
              type: string
            schemaType:
              type: string
            taxonomyTerms:
              items:
                $ref: '#/components/schemas/TaxonomyTerm'
              type: array
            version:
              type: string
          required:
            - jurisdiction
            - documentTitle
            - createdBy
            - internallyCreated
            - schemaType
            - contentSource
            - informationType
            - createdDateTime
            - version
            - feedFormat
            - taxonomyTerms
            - documentContent
        
        TaxonomyTerm:
          type: object
          additionalProperties: false
          properties:
            alternative_labels:
              items:
                type: string
              type: array
            ancestorTerms:
              items:
                $ref: '#/components/schemas/AncestorTerm'
              type: array
            facetType:
              type: string
            inScheme:
              items:
                type: string
              type: array
            tagId:
              type: string
            termLabel:
              type: string
          required:
            - tagId
            - facetType
            - inScheme
            - termLabel
            - ancestorTerms
            - alternative_labels

        AncestorTerm:
          type: object
          additionalProperties: false
          properties:
            rank:
              type: number
            tagId:
              type: string
            termLabel:
              type: string
          required:
            - tagId
            - termLabel
            - rank
