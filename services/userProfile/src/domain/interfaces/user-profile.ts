/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/user": {
    get: operations["getUser"];
    post: {
      responses: {
        /** Succesfully created User Profile */
        200: {
          content: {
            "application/json": components["schemas"]["UserProfile"];
          };
        };
        /** Invalid User Profile supplied */
        400: unknown;
        /** Not authenticated */
        401: unknown;
        /** Does not have correct permissions */
        403: unknown;
        /** an existing item already exists */
        409: unknown;
      };
      /** User Profile to create */
      requestBody: {
        content: {
          "application/json": components["schemas"]["UserProfileCreate"];
        };
      };
    };
  };
  "/user/{userId}": {
    get: {
      parameters: {
        path: {
          /** UUID of the User to get */
          userId: string;
        };
        query: {
          /** Return User Profiles with role data */
          with_roles?: boolean;
        };
      };
      responses: {
        /** Specified client account */
        200: {
          content: {
            "application/json":
              | components["schemas"]["UserProfile"]
              | components["schemas"]["UserProfileWithRole"];
          };
        };
        /** Not authenticated */
        401: unknown;
        /** Does not have correct permissions */
        403: unknown;
        /** Client Account not found */
        404: unknown;
      };
    };
    put: {
      parameters: {
        path: {
          /** UUID of the User to get */
          userId: string;
        };
      };
      responses: {
        /** Succesfully updated User Profile */
        200: {
          content: {
            "application/json": components["schemas"]["UserProfile"];
          };
        };
        /** Invalid User Profile supplied */
        400: unknown;
        /** Not authenticated */
        401: unknown;
        /** Does not have correct permissions */
        403: unknown;
        /** an existing item already exists */
        409: unknown;
      };
      /** User Profile update */
      requestBody: {
        content: {
          "application/json": components["schemas"]["UserProfile"];
        };
      };
    };
    parameters: {
      path: {
        /** UUID of the User to get */
        userId: string;
      };
    };
  };
  "/user-by-name/{nameOrPartial}": {
    get: operations["getUserByName"];
    parameters: {
      path: {
        /** Name or partial name to search by */
        nameOrPartial: string;
      };
    };
  };
  "/role": {
    get: operations["getRole"];
  };
}

export interface components {
  schemas: {
    UserProfileBase: {
      title: string;
      first_name: string;
      last_name: string;
      primary_email_address: string;
      seconday_email_address?: string;
      telephone_number_1: string;
      telephone_number_2?: string;
    };
    UserProfile: components["schemas"]["UserProfileBase"] & {
      id: string;
    };
    Role: {
      id: string;
      title: string;
      /** Indicates if role is dods internal role */
      dods_role: boolean;
    };
    UserProfileWithRole: components["schemas"]["UserProfile"] & {
      role: components["schemas"]["Role"];
    };
    UserProfileCreate: components["schemas"]["UserProfileBase"] & {
      role_id: string;
    };
  };
}

export interface operations {
  getUser: {
    parameters: {
      query: {
        /** Maximum number of User Profiles to return */
        limit?: number;
        /** Return User Profiles with role data */
        with_roles?: boolean;
      };
    };
    responses: {
      /** List of User Profiles in the system */
      200: {
        content: {
          "application/json": (
            | components["schemas"]["UserProfile"]
            | components["schemas"]["UserProfileWithRole"]
          )[];
        };
      };
      /** Not authenticated */
      401: unknown;
      /** Does not have correct permissions */
      403: unknown;
    };
  };
  getUserByName: {
    parameters: {
      path: {
        /** Name or partial name to search by */
        nameOrPartial: string;
      };
    };
    responses: {
      /** Found Users */
      200: {
        content: {
          "application/json": components["schemas"]["UserProfile"][];
        };
      };
      /** Not authenticated */
      401: unknown;
      /** Does not have correct permissions */
      403: unknown;
      /** No Users found */
      404: unknown;
    };
  };
  getRole: {
    parameters: {
      query: {
        /** Maximum number of Roles to return */
        limit?: number;
      };
    };
    responses: {
      /** List of User Profiles in the system */
      200: {
        content: {
          "application/json": components["schemas"]["Role"][];
        };
      };
      /** Not authenticated */
      401: unknown;
      /** Does not have correct permissions */
      403: unknown;
    };
  };
}

export interface external {}
