openapi: 3.0.0
info:
  description: DODS Document Service CRUD
  version: 1.0.0
  title: DODS Document Service
  contact:
    email: kenanhancer@gmail.com
  license:
    name: GPL 3.0
    url: "https://www.gnu.org/licenses/gpl-3.0.html"
servers:
  - url: /api

paths:
  /documents/{documentId}:
    put:
      operationId: updateDocument
      summary: "Update document at S3"
      description: "Update document at S3"
      parameters:
        - $ref: "#/components/parameters/documentId"
        - $ref: "#/components/parameters/document"
      responses:
        "200":
          $ref: "#/components/responses/UpdateDocument"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

  /documents:
    get:
      operationId: getDocument
      summary: "Get Document from S3"
      description: "Get Document from S3"
      parameters:
        - $ref: "#/components/parameters/arn"
      responses:
        "200":
          $ref: "#/components/responses/GetDocument"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
    post:
      operationId: createDocument
      summary: "Create Document on S3"
      description: "Create Document on S3"
      parameters:
        - $ref: "#/components/parameters/document"
      responses:
        "200":
          $ref: "#/components/responses/CreateDocument"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"

components:
  schemas:
    Message:
      type: object
      properties:
        message:
          type: string
    Errors:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    GetDocumentSuccess:
      type: object
      properties:
          success:
              type: boolean
          document:
              $ref: '#/components/schemas/Document'
    UpdateDocumentSuccess:
      type: object
      properties:
        success:
          type: boolean
        document:
          $ref: '#/components/schemas/Document'
    CreateDocumentSuccess:
      type: object
      properties:
        success:
          type: boolean
        documentContent:
          $ref: '#/components/schemas/Document'
        documentId:
          type: string
    Document:
      type: object
      properties:
        jurisdiction:
          type: string
          example: UK
        documentTitle:
          type: string
          example: New Which? research reveals the most sustainable savings providers
        organisationName:
          type: string
        sourceReferenceFormat:
          type: string
          example: text/plain
        sourceReferenceUri:
          type: string
          example: https://press.which.co.uk/whichpressreleases/new-which-research-reveals-the-most-sustainable-savings-providers/
        createdBy:
          type: string
          example: taerekim@gmail.com
        internallyCreated:
          type: boolean
        schemaType:
          type: string
          example: External
        contentSource:
          type: string
          example: UK Stakeholder
        informationType:
          type: string
          example: Press Releases
        contentDateTime:
          type: string
          format: date-time
          example: "2021-08-18T10:29:20.778+01:00"
        createdDateTime:
          type: string
          format: date-time
          example: "2021-08-18T10:29:51.960+01:00"
        ingestedDateTime:
          type: string
          format: date-time
          example: "2021-08-18T10:29:51.960+01:00"
        version:
          type: string
          example: "1.0"
        countryOfOrigin:
          type: string
          example: GBR
        feedFormat:
          type: string
          example: text/plain
        language:
          type: string
          example: en
        taxonomyTerms:
          type: object
        originalContent:
          type: string
        documentContent:
          type: string
      required:
        - documentTitle
        - contentSource
        - informationType
        - createdDateTime

  parameters:
    documentId:
      in: path
      name: documentId
      schema:
        type: string
      required: true
      description: Document ID of interest
    document:
      in: header
      name: document
      schema:
        type: string
      required: true
      description: Received Document
    arn:
      in: query
      name: arn
      schema:
        type: string
      required: true
      description: Document arn of interest

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
    BadRequest:
      description: Bad Request. Input must be valid
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/Message"
              - $ref: "#/components/schemas/Errors"
    NotAcceptable:
      description: Not Acceptable.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
    GetDocument:
      description: "Get a document using its UUID"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDocumentSuccess'
    UpdateDocument:
      description: "Update a document fields using its UUID"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateDocumentSuccess'
    CreateDocument:
      description: "Create a new document"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateDocumentSuccess'
