service: dods-search-service

configValidationMode: warn

frameworkVersion: ^2.54.0

variablesResolutionMode: 20210326

useDotenv: true

projectDir: ../

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs14.x
  timeout: 10
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: pip-${self:provider.stage}-services-lambdas

  lambdaHashingVersion: 20201221
  stackTags:
    service: ${self:service}
    env: ${self:provider.stage}
    version: "1"
    teamsEmail: dods.project@somoglobal.com
    team: dods
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
  vpc:
    securityGroupIds: ${file(../env-config.${self:provider.stage}.js):securityGroupIds, file(../vpc.${self:provider.stage}.js):securityGroupIds}
    subnetIds: ${file(../env-config.${self:provider.stage}.js):subnetIds, file(../vpc.${self:provider.stage}.js):subnetIds}

  apiGateway:
    restApiId: ${file(../env-config.${self:provider.stage}.js):apiGatewayId, "dev"}
    restApiRootResourceId: ${file(../env-config.${self:provider.stage}.js):apiRootResourceId, "dev"}
    description: Default Gateway for ${self:provider.stage} deployed by Terraform

  environment:
    NODE_ENV: ${opt:NODE_ENV, 'test'}
    SERVERLESS_STAGE: ${self:provider.stage}
    SERVERLESS_PORT: ${self:custom.serverless-offline.httpPort}
    JWK_URL: 'https://cognito-idp.${self:provider.region}.amazonaws.com/${cf:dods-iam-${self:provider.stage}.UserPoolId}/.well-known/jwks.json'
    ES_CLOUD_ID: ${ssm:/infra/elastic/cloud_id}
    ES_KEY_ID: ${ssm:/infra/elastic/key_id}
    ES_API_KEY: ${ssm:/infra/elastic/api_key}
    DB_CONNECTION_LIMIT: 5
    DB_DRIVER: mariadb
    DB_NAME: dods
    DB_HOST: ${ssm:/infra/${self:provider.stage}/rds/endpoint, 'localhost'}
    DB_USER: ${ssm:/infra/${self:provider.stage}/rds/username, 'dods' }
    DB_PASSWORD: ${ssm:/infra/${self:provider.stage}/rds/password, 'dods'}

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
        - express
    keepOutputDirectory: false
  serverless-offline:
    httpPort: 3000
  prune:
    automatic: true
    number: 1
  dependsOn:
    enabled: true
    chains: 8
  localstack:
    stages:
      # list of stages for which the plugin should be enabled
      - local
    host: http://localhost # optional - LocalStack host to connect to
    edgePort: 4566 # optional - LocalStack edge port to connect to
    autostart: false # optional - Start LocalStack in Docker on Serverless deploy
    # lambda:
    #   # Enable this flag to improve performance
    #   mountCode: True
    docker:
      # Enable this flag to run "docker ..." commands as sudo
      sudo: False
  # apiGatewayCaching:
    # enabled: true

plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-localstack
  - serverless-dependson-plugin
  - serverless-offline
package:
  include:
    - node_modules/**

functions:
  getContent:
    handler: src/handlers/getContent/index.handle
    description: Get content detail by content id
    events:
      - http:
          method: get
          path: search/contents/{contentId}

  rawQuery:
    handler: src/handlers/rawQuery/index.handle
    description: Process raw query
    events:
      - http:
          method: post
          path: search/contents/query

  createPercolator:
    handler: src/handlers/createPercolator/index.handle
    description: Create alert percolator
    events:
      - http:
          method: post
          path: percolator
          cors: true

  updatePercolator:
    handler: src/handlers/updatePercolator/index.handle
    description: Update alert percolator
    events:
      - http:
          method: put
          path: percolator/{alertId}
          cors: true

  deletePercolator:
    handler: src/handlers/deletePercolator/index.handle
    description: Delete alert percolator
    events:
      - http:
          method: delete
          path: percolator/{alertId}
          cors: true

  createESQuery:
    handler: src/handlers/createESQuery/index.handle
    description: Create ES query from UI Query String
    events:
      - http:
          method: post
          path: search/create-query
          cors: true