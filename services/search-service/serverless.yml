service: dods-search-service

configValidationMode: warn

frameworkVersion: ^2.54.0

variablesResolutionMode: 20210326

useDotenv: true

projectDir: ../

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: pip-${self:provider.stage}-services-lambdas

  lambdaHashingVersion: 20201221
  stackTags:
    service: ${self:service}
    env: ${self:provider.stage}
    version: 1
    teamsEmail: dods.project@somoglobal.com
    team: dods
  tags:
    myTag1: myTag1
  tracing:
    apiGateway: true
    lambda: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"
  vpc:
    securityGroupIds: ${file(../env-config.${self:provider.stage}.js):securityGroupIds, file(../vpc.local.js):securityGroupIds}
    subnetIds: ${file(../env-config.${self:provider.stage}.js):subnetIds, file(../vpc.local.js):subnetIds}

  apiGateway:
    restApiId: ${file(../env-config.${self:provider.stage}.js):apiGatewayId, "local"} 
    restApiRootResourceId: ${file(../env-config.${self:provider.stage}.js):apiRootResourceId, "local"} 
    description: Default Gateway for ${self:provider.stage} deployed by Terraform

  environment:
    NODE_ENV: ${opt:NODE_ENV, 'test'}
    SERVERLESS_STAGE: ${self:provider.stage}
    SERVERLESS_PORT: ${self:custom.serverless-offline.httpPort}
    ES_CLOUD_ID: dods-search:ZXUtd2VzdC0xLmF3cy5mb3VuZC5pbyQ5ZTVjODg3MTM1OWE0ZGZmYTk4ZjBhOTg4NWI4YzA3OCRkMmMwYzI0OWY4MjA0YmRjYjU0MTc3Y2FhOGUzYzM5Mg==
    ES_KEY_ID: CLhVX3sBIZN5wdwKNwAy
    ES_API_KEY: qrE4FL__SJOs1BmWKS8ozg

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceInclude:
        - express
    keepOutputDirectory: false
  serverless-offline:
    httpPort: 3000
  prune:
    automatic: true
    number: 1
  dependsOn:
    enabled: true
    chains: 8
  localstack:
    stages:
      # list of stages for which the plugin should be enabled
      - local
    host: http://localhost # optional - LocalStack host to connect to
    edgePort: 4566 # optional - LocalStack edge port to connect to
    autostart: false # optional - Start LocalStack in Docker on Serverless deploy
    # lambda:
    #   # Enable this flag to improve performance
    #   mountCode: True
    docker:
      # Enable this flag to run "docker ..." commands as sudo
      sudo: False

plugins:
  - serverless-webpack
  - serverless-prune-plugin
  - serverless-localstack
  - serverless-dependson-plugin
  - serverless-offline
package:
  include:
    - node_modules/**

functions:
  getContent:
        handler: src/handlers/getContent/index.handle
        description: Get content detail by content id
        events:
            - http:
                  method: get
                  path: search/contents/{contentId}