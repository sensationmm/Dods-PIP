service: scraper-writtenQuestions-hol-uk

frameworkVersion: '2'
projectDir: ../
variablesResolutionMode: 20210326
configValidationMode: error

custom:
  app_acronym: dods-wq-bucket
  default_stage: dev
  stage: ${opt:stage, self:custom.default_stage}
  stack_name: ${self:custom.app_acronym}-${self:custom.stage}
  region: ${opt:region, self:provider.region}
  deletion_policy: Delete
  dynamodb_table: ${self:custom.stack_name}
  dynamodb_arn: arn:aws:dynamodb:${self:custom.region}:*:table/${self:custom.dynamodb_table}
  dynamodb_host: https://dynamodb.${self:custom.region}.amazonaws.com
  s3_bucket: ${opt:s3_bucket, self:custom.app_acronym}
  s3_key_base: ${opt:s3_key_base, self:custom.stage}
  s3_bucket_arn: arn:aws:s3:::${self:custom.s3_bucket}
  s3_role_resource: ${self:custom.s3_bucket_arn}/${self:custom.s3_key_base}/*

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt
  include:
    - ../

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  region: eu-west-1
  stage: ${opt:stage, 'dev'}

  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    DYNAMODB_TABLE: ${self:custom.dynamodb_table}
    DYNAMODB_HOST: ${self:custom.dynamodb_host}
    REGION: ${self:custom.region}
    S3_WRITTEN_QUESTION_BUCKET: ${self:custom.s3_bucket}
    S3_KEY_BASE: ${self:custom.s3_key_base}

  iamRoleStatements:
    - ${file(../serverless.common.yml):lambdaPolicyS3}

functions:
  scrape:
    name: scraper-writtenQuestions-hol-uk-${sls:stage}
    description: Ingest Written Questions HOL (UK) data
    handler: handler.run
    events:
      - schedule: rate(1 day)

plugins:
  - serverless-python-requirements
  - serverless-offline
resources:
  Resources:
    assetDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: ${self:custom.deletion_policy}
      Properties:
        AttributeDefinitions:
          -
            AttributeName: document_hash
            AttributeType: S
        KeySchema:
          -
            AttributeName: document_hash
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.dynamodb_table}

    S3WQHOLBucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:provider.environment.S3_WRITTEN_QUESTION_BUCKET}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "Authorization"
              AllowedMethods:
                - GET
              AllowedOrigins:
                - "*"
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - PUT
              AllowedOrigins:
                - "*"