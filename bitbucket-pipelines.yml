pipelines:
  default:
    - step:
        name: Lint and test PIP Frontend
        image: gioatsomoglobal/devopstools:0.1.0
        caches:
          - node
        condition:
          changesets:
            includePaths:
              - "frontend/dods_pip/**"
        script:
          - cd ${FRONTEND_SRC}
          - yarn install
          - yarn lint
          - yarn test

  branches:
    # Commits to main branch will trigger a deployment to Test environment
    master: 
      - step:
          name: Test/Build/Deploy Frontend image
          image: gioatsomoglobal/devopstools:0.1.0
          deployment: Test
          condition:
            changesets:
              includePaths:
                - "frontend/dods_pip/**"
          caches:
            - node
            - docker
          services:
            - docker
          script:
            - export IMAGE_NAME=${AWS_ECR_NAME}/${FRONTEND_IMAGE}
            - cd ${FRONTEND_SRC}
            - yarn install
            - yarn lint
            - yarn test
            - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username ${AWS_ECR_USER} --password-stdin ${AWS_ECR_NAME}
            - docker build -t ${IMAGE_NAME}:${BITBUCKET_BUILD_NUMBER} .
            - docker push ${IMAGE_NAME}
            - docker tag ${IMAGE_NAME}:${BITBUCKET_BUILD_NUMBER} ${IMAGE_NAME}:latest
            - docker push ${IMAGE_NAME}:latest
            - cd ../../tools
            - ./ecs_deploy.sh ${FARGATE_SERVICE_FRONTEND}

  custom:
    deployment-to-staging:
      - step:
          name: Deploy to staging environment
          deployment: Staging
          script:
            - export IMAGE_NAME=${AWS_ECR_NAME}/${FRONTEND_IMAGE}:latest
            - cd tools
            - ./ecs_deploy.sh ${FARGATE_SERVICE_FRONTEND}